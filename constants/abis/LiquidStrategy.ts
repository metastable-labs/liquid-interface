export const LiquidStrategy = {
  abi: [
    { inputs: [{ internalType: 'bytes32', name: 'strategyId', type: 'bytes32' }], name: 'StrategyAlreadyExists', type: 'error' },
    { inputs: [{ internalType: 'bytes32', name: 'strategyId', type: 'bytes32' }], name: 'StrategyNotFound', type: 'error' },
    { inputs: [{ internalType: 'address', name: 'caller', type: 'address' }], name: 'Unauthorized', type: 'error' },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: 'bytes32', name: 'strategyId', type: 'bytes32' },
        { indexed: true, internalType: 'address', name: 'curator', type: 'address' },
        { indexed: true, internalType: 'string', name: 'name', type: 'string' },
        { indexed: false, internalType: 'string', name: 'strategyDescription', type: 'string' },
        {
          components: [
            { internalType: 'address', name: 'connector', type: 'address' },
            { internalType: 'enum IConnector.ActionType', name: 'actionType', type: 'uint8' },
            { internalType: 'address[]', name: 'assetsIn', type: 'address[]' },
            { internalType: 'address', name: 'assetOut', type: 'address' },
            { internalType: 'uint256', name: 'amountRatio', type: 'uint256' },
            { internalType: 'bytes', name: 'data', type: 'bytes' },
          ],
          indexed: false,
          internalType: 'struct ILiquidStrategy.Step[]',
          name: 'steps',
          type: 'tuple[]',
        },
        { indexed: false, internalType: 'uint256', name: 'minDeposit', type: 'uint256' },
        { indexed: false, internalType: 'uint256', name: 'maxTVL', type: 'uint256' },
        { indexed: false, internalType: 'uint256', name: 'performanceFee', type: 'uint256' },
      ],
      name: 'CreateStrategy',
      type: 'event',
    },
    {
      inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      name: 'allStrategyIds',
      outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'string', name: '_name', type: 'string' },
        { internalType: 'string', name: '_strategyDescription', type: 'string' },
        {
          components: [
            { internalType: 'address', name: 'connector', type: 'address' },
            { internalType: 'enum IConnector.ActionType', name: 'actionType', type: 'uint8' },
            { internalType: 'address[]', name: 'assetsIn', type: 'address[]' },
            { internalType: 'address', name: 'assetOut', type: 'address' },
            { internalType: 'uint256', name: 'amountRatio', type: 'uint256' },
            { internalType: 'bytes', name: 'data', type: 'bytes' },
          ],
          internalType: 'struct ILiquidStrategy.Step[]',
          name: '_steps',
          type: 'tuple[]',
        },
        { internalType: 'uint256', name: '_minDeposit', type: 'uint256' },
        { internalType: 'uint256', name: '_maxTVL', type: 'uint256' },
        { internalType: 'uint256', name: '_performanceFee', type: 'uint256' },
      ],
      name: 'createStrategy',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getAllStrategies',
      outputs: [
        {
          components: [
            { internalType: 'bytes32', name: 'strategyId', type: 'bytes32' },
            { internalType: 'address', name: 'curator', type: 'address' },
            { internalType: 'string', name: 'name', type: 'string' },
            { internalType: 'string', name: 'strategyDescription', type: 'string' },
            {
              components: [
                { internalType: 'address', name: 'connector', type: 'address' },
                { internalType: 'enum IConnector.ActionType', name: 'actionType', type: 'uint8' },
                { internalType: 'address[]', name: 'assetsIn', type: 'address[]' },
                { internalType: 'address', name: 'assetOut', type: 'address' },
                { internalType: 'uint256', name: 'amountRatio', type: 'uint256' },
                { internalType: 'bytes', name: 'data', type: 'bytes' },
              ],
              internalType: 'struct ILiquidStrategy.Step[]',
              name: 'steps',
              type: 'tuple[]',
            },
            { internalType: 'uint256', name: 'minDeposit', type: 'uint256' },
            { internalType: 'uint256', name: 'maxTVL', type: 'uint256' },
            { internalType: 'uint256', name: 'performanceFee', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.Strategy[]',
          name: '',
          type: 'tuple[]',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'bytes32', name: '_strategyId', type: 'bytes32' }],
      name: 'getStrategy',
      outputs: [
        {
          components: [
            { internalType: 'bytes32', name: 'strategyId', type: 'bytes32' },
            { internalType: 'address', name: 'curator', type: 'address' },
            { internalType: 'string', name: 'name', type: 'string' },
            { internalType: 'string', name: 'strategyDescription', type: 'string' },
            {
              components: [
                { internalType: 'address', name: 'connector', type: 'address' },
                { internalType: 'enum IConnector.ActionType', name: 'actionType', type: 'uint8' },
                { internalType: 'address[]', name: 'assetsIn', type: 'address[]' },
                { internalType: 'address', name: 'assetOut', type: 'address' },
                { internalType: 'uint256', name: 'amountRatio', type: 'uint256' },
                { internalType: 'bytes', name: 'data', type: 'bytes' },
              ],
              internalType: 'struct ILiquidStrategy.Step[]',
              name: 'steps',
              type: 'tuple[]',
            },
            { internalType: 'uint256', name: 'minDeposit', type: 'uint256' },
            { internalType: 'uint256', name: 'maxTVL', type: 'uint256' },
            { internalType: 'uint256', name: 'performanceFee', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.Strategy',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: '_curator', type: 'address' }],
      name: 'getStrategy',
      outputs: [
        {
          components: [
            { internalType: 'bytes32', name: 'strategyId', type: 'bytes32' },
            { internalType: 'address', name: 'curator', type: 'address' },
            { internalType: 'string', name: 'name', type: 'string' },
            { internalType: 'string', name: 'strategyDescription', type: 'string' },
            {
              components: [
                { internalType: 'address', name: 'connector', type: 'address' },
                { internalType: 'enum IConnector.ActionType', name: 'actionType', type: 'uint8' },
                { internalType: 'address[]', name: 'assetsIn', type: 'address[]' },
                { internalType: 'address', name: 'assetOut', type: 'address' },
                { internalType: 'uint256', name: 'amountRatio', type: 'uint256' },
                { internalType: 'bytes', name: 'data', type: 'bytes' },
              ],
              internalType: 'struct ILiquidStrategy.Step[]',
              name: 'steps',
              type: 'tuple[]',
            },
            { internalType: 'uint256', name: 'minDeposit', type: 'uint256' },
            { internalType: 'uint256', name: 'maxTVL', type: 'uint256' },
            { internalType: 'uint256', name: 'performanceFee', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.Strategy[]',
          name: '',
          type: 'tuple[]',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'bytes32', name: '_strategyId', type: 'bytes32' }],
      name: 'getStrategyStats',
      outputs: [
        {
          components: [
            { internalType: 'uint256', name: 'totalDeposits', type: 'uint256' },
            { internalType: 'uint256', name: 'totalUsers', type: 'uint256' },
            { internalType: 'uint256', name: 'totalFeeGenerated', type: 'uint256' },
            { internalType: 'uint256', name: 'lastUpdated', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.StrategyStats',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [],
      name: 'getTotalStrategies',
      outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'bytes32', name: '_strategyId', type: 'bytes32' },
        { internalType: 'address', name: '_user', type: 'address' },
        { internalType: 'address', name: '_asset', type: 'address' },
      ],
      name: 'getUserAssetBalance',
      outputs: [
        {
          components: [
            { internalType: 'address', name: 'asset', type: 'address' },
            { internalType: 'uint256', name: 'amount', type: 'uint256' },
            { internalType: 'uint256', name: 'usdValue', type: 'uint256' },
            { internalType: 'uint256', name: 'lastUpdated', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.AssetBalance',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'bytes32', name: '_strategyId', type: 'bytes32' },
        { internalType: 'address', name: '_user', type: 'address' },
        { internalType: 'address', name: '_protocol', type: 'address' },
        { internalType: 'address', name: '_lpToken', type: 'address' },
      ],
      name: 'getUserShareBalance',
      outputs: [
        {
          components: [
            { internalType: 'address', name: 'protocol', type: 'address' },
            { internalType: 'address', name: 'lpToken', type: 'address' },
            { internalType: 'uint256', name: 'lpAmount', type: 'uint256' },
            { internalType: 'address[]', name: 'underlyingTokens', type: 'address[]' },
            { internalType: 'uint256[]', name: 'underlyingAmounts', type: 'uint256[]' },
            { internalType: 'uint256', name: 'lastUpdated', type: 'uint256' },
          ],
          internalType: 'struct ILiquidStrategy.ShareBalance',
          name: '',
          type: 'tuple',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'address', name: '_user', type: 'address' }],
      name: 'getUserStrategies',
      outputs: [{ internalType: 'bytes32[]', name: '', type: 'bytes32[]' }],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
      name: 'strategies',
      outputs: [
        { internalType: 'bytes32', name: 'strategyId', type: 'bytes32' },
        { internalType: 'address', name: 'curator', type: 'address' },
        { internalType: 'string', name: 'name', type: 'string' },
        { internalType: 'string', name: 'strategyDescription', type: 'string' },
        { internalType: 'uint256', name: 'minDeposit', type: 'uint256' },
        { internalType: 'uint256', name: 'maxTVL', type: 'uint256' },
        { internalType: 'uint256', name: 'performanceFee', type: 'uint256' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
      name: 'strategyStats',
      outputs: [
        { internalType: 'uint256', name: 'totalDeposits', type: 'uint256' },
        { internalType: 'uint256', name: 'totalUsers', type: 'uint256' },
        { internalType: 'uint256', name: 'totalFeeGenerated', type: 'uint256' },
        { internalType: 'uint256', name: 'lastUpdated', type: 'uint256' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'bytes32', name: '', type: 'bytes32' },
        { internalType: 'address', name: '', type: 'address' },
      ],
      name: 'userStats',
      outputs: [
        { internalType: 'uint256', name: 'initialDeposit', type: 'uint256' },
        { internalType: 'uint256', name: 'totalDepositedUSD', type: 'uint256' },
        { internalType: 'uint256', name: 'totalWithdrawnUSD', type: 'uint256' },
        { internalType: 'uint256', name: 'totalReward', type: 'uint256' },
        { internalType: 'uint256', name: 'feesPaid', type: 'uint256' },
        { internalType: 'uint256', name: 'joinTimestamp', type: 'uint256' },
        { internalType: 'uint256', name: 'lastActionTimestamp', type: 'uint256' },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        { internalType: 'address', name: '', type: 'address' },
        { internalType: 'uint256', name: '', type: 'uint256' },
      ],
      name: 'userStrategies',
      outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
      stateMutability: 'view',
      type: 'function',
    },
  ],
} as const;
